@using ProductionTracker.Data
@using ProductionTracker.Web.Models
@model ColorVM

@{
    ViewBag.Title = "Colors";
}

<style>
    .color-form {
        background-color: #86afcc;
        overflow: auto;
        max-height: 750px;
    }

    .color-table {
        overflow: auto;
        background-color: #7e98b3;
        max-height: 750px;
    }
    .being-edited-background {
        background-color: #f4eb42;
    }
</style>

@*this is a test*@

<div id="app">
    <div class="row" style="margin-top:25px;">

        <div class="col-md-5 col-lg-offset-1 well color-form">
            <h3 id="color-form-header" style="text-align:center; font-weight:bold;">Enter the colors you want to add </h3>
            <br />
            <button @*id="btn-row-adder"*@ v-on:click="addRowtoColorForm" style="text-align:end;" type="button" class="btn btn-success">Add more rows</button>
            <table class="table table-bordered table-responsive" id="color-form-table">
                <tr>
                    <th style="text-align:center;">Id</th>
                    <th style="text-align:center;">Color</th>
                </tr>
                <template v-for="color in formColors">
                    <tr>
                        <td>
                            <input type="text" placeholder="Id" v-model="color.Id" class="form-control" />
                        </td>
                        <td>
                            <input type="text" placeholder="Color" v-model="color.Name" class="form-control" />
                        </td>
                    </tr>
                </template>
            </table>
            <button v-on:click="submitColors" class="btn btn-primary btn-lg">Submit</button>
        </div>
        <div class="col-md-5 col-lg-offset-1 color-table">
            <h3 style="text-align:center; font-weight:bold;">Colors </h3>
            <table class="table table-bordered table-responsive table-striped table-hover">
                <tr>
                    <th style="text-align:center;">Id</th>
                    <th style="text-align:center;">Color</th>

                </tr>
                @*@foreach (var color in Model.Colors)
                    {
                        <tr>
                            <td>@color.Id</td>
                            <td>@color.Name</td>
                        </tr>
                    }*@
                <template v-for="(color,index) in listOfAllColors">
                    <tr>
                        <td>{{color.Id}}</td>
                        <td :class="{'being-edited-background': color.Edit}" v-on:dblclick="color.Edit = !color.Edit;" tabindex="1">
                            <span v-if="!color.Edit">{{color.Name}}</span>
                            <input v-else @*style="background-color:#78a4bd;"*@  v-model="color.Name"/>
                        </td>

                    </tr>
                </template>

            </table>
        </div>

    </div>
</div>

@section scripts{
    <script src="~/Scripts/SiteScripts/Colors.js"></script>
    <script src="~/Scripts/vue.js"></script>
    <script src="~/Scripts/SiteScripts/color-vue.js"></script>
}


@section css{
    <link href="~/Metronic/theme/assets/global/plugins/bootstrap-sweetalert/sweetalert.css" rel="stylesheet" />
}


