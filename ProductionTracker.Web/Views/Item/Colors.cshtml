@using ProductionTracker.Data
@using ProductionTracker.Web.Models
@model ColorVM

@{
    ViewBag.Title = "Colors";
}

<style>    
    .color-form {
        background-color: #86afcc;
        overflow: auto;
        max-height: 750px;
    }

    .color-table {
        overflow: auto;
        background-color: #7e98b3;
        max-height: 750px;
    }

    .being-edited-background {
        background-color: #f4eb42 !important;
    }
</style>


<div id="app">
    <div class="col-md-5 col-lg-offset-3 well">

        <div class="row color-form">
            <div class="row" style="margin:0px;">
                <div class="col-md-4" style="margin-left:-15px;">
                <button v-on:click="addRowtoColorForm" style="text-align:end;" type="button" class="btn btn-success">Add more rows</button>
                </div>
                <div class="col-md-4 text-center">
                <h6 id="color-form-header" style="text-align:center; font-weight: bold; font-size: 23px; margin-bottom: 3px;">Add colors</h6>
                </div>
                <div class="col-md-4" style="float:right; padding-right:0px; ">
                <button v-on:click="submitColors" style="float:right; background-color: limegreen;" class="btn">Submit</button>
                </div>
            </div>
            <table class="table table-bordered table-responsive" id="color-form-table">
                <tr>
                    <th style="text-align:center;">Id</th>
                    <th colspan="2" style="text-align:center;">Color</th>
                </tr>
                <template v-for="(color,index) in formColors">
                    <tr>
                        <td>
                            <input type="text" placeholder="Id" v-model="color.Id" class="form-control" />
                        </td>
                        <td>
                            <input v-on:change="color.Name = color.Name.toUpperCase()" type="text" placeholder="Color" v-model="color.Name" class="form-control" />
                        </td>
                        <td>
                            <button v-on:click="formColors.splice(index,1)" class="btn btn-circle btn-icon-only red-sunglo">X</button>
                        </td>
                    </tr>
                </template>
            </table>

        </div>
        
        <hr />
        <div class="color-table">
            <h3 style="text-align:center; font-weight:bold;">Colors </h3>
            <table class="table table-bordered table-responsive table-striped table-hover">
                <tr>
                    <th style="text-align:center;">Id</th>
                    <th colspan="2" style="text-align:center;">Color</th>

                </tr>
                
                <template v-for="(color,index) in listOfAllColors">
                    <tr :class="{'being-edited-background': color.Edit}">
                        <td>{{color.Id}}</td>
                        <td :colspan="!color.Edit ? 2 : 1" v-on:dblclick="color.Edit = !color.Edit; color.NameCopy = color.Name" tabindex="1">
                            <span v-if="!color.Edit">{{color.Name}}</span>
                            <input v-else @*style="background-color:#78a4bd;"*@ v-model="color.Name" />
                        <td v-if="color.Edit" class="action-btn-td">
                            <span class="action-btn-span">
                                <span class="font-awsome-span save-btn"><i title="Save" v-on:click="updateExistingColor(index); color.Edit = !color.Edit" class="fa fa-save"></i></span>
                                <span title="Delete" v-on:click="deleteAnExistingItem(index)" class="font-awsome-span delete-btn"><i class="fa fa-trash"></i></span>
                                <button title="Cancel" class="btn btn-circle default cancel-btn" v-on:click="color.Edit = !color.Edit; color.Name = color.NameCopy;">Cancel</button>
                            </span>
                        </td>

                    </tr>
                </template>

            </table>
        </div>

    </div>
</div>

@section scripts{
    <script src="~/Metronic/theme/assets/global/plugins/bootstrap-sweetalert/sweetalert.js"></script>
    <script src="~/Metronic/theme/assets/global/plugins/bootstrap-confirmation/bootstrap-confirmation.js"></script>
    <script src="~/Scripts/SiteScripts/Colors.js"></script>
    <script src="~/Scripts/vue.js"></script>
    <script src="~/Scripts/SiteScripts/color-vue.js"></script>
}


@section css{
    <link href="~/Metronic/theme/assets/global/plugins/bootstrap-sweetalert/sweetalert.css" rel="stylesheet" />
}


