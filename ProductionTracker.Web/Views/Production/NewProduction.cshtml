@model  ProductionTracker.Web.Excel.ErrorsAndItems
@{
    ViewBag.Title = "NewProduction";
}
<style>
    [hidden] {
        display: none !important;
    }
    .remove-btn{
        font-weight:800;
        font-size:13px;
    }
    .size-remove-btn{
        font-size:5px;
    }
    .size-container {
        position: relative;
        width: 50px;
        height: 60px;
        margin-bottom:15px;
    }
    .add-size-btn {
        height: 25px;
        width: 15px;
        text-align:initial;
        margin-left:20px;
    }
    .size-element button {
        height:4px;
        width: 15px;
        position: center;
    }

    .size-element {
        width: 50px;
        height: 15px;
        margin: 5px auto;
    }
    .markerNumber {
        font-size: 35px;
        text-align: center;
        margin-top: 150%;
        margin-bottom: 150%;
    }
    th{
        text-align:center;
    }
    input[type="text"]::-webkit-calendar-picker-indicator {
        display: none;
    }
    .marker-input {
        padding: 1px 5px;
    }
    .hasError {
        color: red;
        border: 2px solid red;
    }
    .total-layers {
        border: 1px solid lightgrey;
        background-color: white;
        font-size: 12px;
        padding: 2px;
    }
</style>
<div id="prodApp" class="container">
    <div class="col-md-8 col-md-offset-2" v-if="production == null">
        <div class="col-md-6">
            <h2 class="page-header">Browse to add a new cutting ticket</h2>
            <form method="post" enctype="multipart/form-data">
                @*<label class="btn btn-default">
                Browse <input type="file" hidden >
            </label>*@
                <input style="background-color:aqua;" v-on:change="file = $event.target.files[0]" type="file" name="cuttingTicket" />
                <button type="button" :disabled="file == null" v-on:click="fileUpload" class="btn-danger">Submit</button>
            </form>
        </div>
        <div class="col-md-6">
            <h2 class="page-header">New Production</h2>
            <button class="btn btn-lg btn-block btn-success" v-on:click="newProd">New</button>
        </div>
    </div>


    <button v-on:click="loadProd">Load</button>
    <div class="row" v-if="errors && errors.length > 0">
        <div class="col-md-6 col-md-offset-3" style="margin-top:25px;margin-bottom:25px; padding-top:50px">
            <h2 class="text-center">Erros</h2>
            <div class="well">
                <template v-for="e in errors">
                    <p style="color:red">{{e}}</p>
                </template>
            </div>
        </div>
    </div>
    <div class="row" v-if="production && !finalProduction" style="">
        <div class="col-md-6 col-md-offset-3">
            <div class="form-row">
                <label class="col-md-2 col-form-label" for="date">Date</label>
                <input type="date" class=" col-md-4" name="Date" id="date" v-model="production.Date" />
                <label class="col-md-3 col-form-label" for="lot">Last Lot#</label>
                <input type="text" class=" col-md-3" name="Lot_" v-model="production.LastLotNumber" />
            </div>
        </div>

        <template v-for="(marker, MarkerIndex) in production.Markers">
            <div class="row" style="margin:25px; padding:15px; border:1px solid lightgrey;">
                <div class="col-md-1" style="height:100%">
                    <button :index="MarkerIndex" v-on:click="removeMarker(MarkerIndex)" class="btn btn-danger btn-block remove-btn">Remove</button>
                    <h2 class="markerNumber">{{MarkerIndex + 1}}</h2>
                </div>
                <div class="col-md-10 col-md-offset-1">
                    <div class="form-group row">
                        <label class="col-md-2 col-form-label" for="MarkerName">Marker Name:</label>
                        <input type="text"   v-bind:class="[markers.includes(marker.Name) ? '': 'hasError' ]" @("@")change="vaidateMarker(MarkerIndex)" class="col-md-1 marker-input" name="MarkerName" v-model="marker.Name" list="markers" />
                        <datalist id="markers">
                            <option v-for="marker in markers">{{marker}}</option>
                        </datalist>
                        @*<label class="error" v-if="this.production.Markers[markerIndex].errors && this.production.Markers[markerIndex].errors['marker']">{{marker.errors['marker']}}</label>*@
                        <label class="col-md-2 col-form-label" for="Lot">Lot Number:</label>
                        <input type="text" class="col-md-1" name="Lot" v-model="marker.LotNumber" />

                        <div v-if="!marker.AllSizes">
                            <div class="size-container col-md-1">
                                <button v-if="marker.Sizes.length < 1" :markerIndex="MarkerIndex" v-on:click="addSize($event, MarkerIndex)" class="btn btn-success">Add a Size</button>
                                <div class="" v-else>
                                    <button :markerIndex="MarkerIndex" v-on:click="addSize($event, MarkerIndex)" class="btn btn-success remove-btn add-size-btn">+</button>
                                </div>
                                <div class="size-element">
                                    <label class="col-md-1 col-form-label" for="Size">Size/s:</label>
                                </div>
                                <div class="size-element" v-if="marker.Sizes.length > 1">
                                    <label class="col-md-1 col-form-label" for="Size">Count:</label>
                                </div>
                            </div>
                            <div class="col-md-5">
                                <template v-for="(size, sizeIndex) in marker.Sizes">
                                    <div class="size-container col-md-2">
                                        <div class="size-element">
                                            <button :markerIndex="MarkerIndex" v-on:click="removeSize($event, MarkerIndex,sizeIndex)" class="btn btn-danger btn-block size-remove-btn">X</button>
                                        </div>
                                        <div class="size-element">
                                            <input type="text" @("@")change="vaidateMarker(MarkerIndex)"  v-bind:class="[sizes.includes(size.Name) ? '': 'hasError' ]" list="sizes" style="width:100%" name="Size" v-model="size.Name" />
                                            <datalist id="sizes">
                                                <option v-for="x in sizes">{{x}}</option>
                                            </datalist>
                                        </div>
                                        <div class="size-element" v-if="marker.Sizes.length > 1">
                                            <input type="text" @("@")change="vaidateMarker(MarkerIndex)" v-bind:class="[ size.AmountPerLayer > 0 ? '': 'hasError' ]" style="width:100%" name="layer" v-model="size.AmountPerLayer" />
                                        </div>
                                    </div>
                                    @*<div class="col-md-1" v-if="marker.Sizes.length-1==sizeIndex">
                    </div>*@
                                </template>
                            </div>
                        </div>
                        <div v-else>
                            <div class="col-md-1">
                                <label>All sizes</label>
                            </div>
                            <div class="col-md-1">
                                <button :markerIndex="MarkerIndex" v-on:click="editAllSizes($event, MarkerIndex)" class="btn btn-success">Edit</button>
                            </div>
                        </div>
                        <div class="row" v-if="marker.ColorMaterials.length > 0">
                            <table class="table table-bordered table-striped table-responsive">
                                <tr>
                                    <th style="text-align:left;"><button :markerIndex="MarkerIndex" v-on:click="addColorMatLine($event, MarkerIndex)" class="btn btn-success remove-btn">+</button><label style="margin-left:35px">Color</label></th>
                                    <th>Material</th>
                                    <th>Layers <br /><span class="total-layers">Total layers: <span v-bind:style="{'color': getSumOfLayersPerMarker(marker)<100?'red':''}">{{getSumOfLayersPerMarker(marker)}}</span></span></th>
                                    <th>Pakaging</th>
                                </tr>
                                <template v-for="(colMat,cmIndex) in marker.ColorMaterials">
                                    <tr>
                                        <td>
                                            <input type="text" list="colors" @("@")change="vaidateMarker(MarkerIndex)" v-bind:class="[colors.includes(colMat.Color) ? '': 'hasError' ]" v-model="colMat.Color" />
                                            <datalist id="colors">
                                                <option v-for="x in colors">{{x}}</option>
                                            </datalist>
                                        </td>
                                        <td>
                                            <input type="text" @("@")change="vaidateMarker(MarkerIndex)" v-bind:class="[materials.includes(colMat.Material) ? '': 'hasError' ]" list="materials" v-model="colMat.Material" />
                                            <datalist id="materials">
                                                <option v-for="x in materials">{{x}}</option>
                                            </datalist>
                                        </td>
                                        <td><input type="text" @("@")change="vaidateMarker(MarkerIndex)" v-model="colMat.Layers" v-bind:class="[ colMat.Layers > 0 ? '': 'hasError' ]"/> </td>
                                        <td><input type="text" /></td>
                                        <td><button :markerIndex="MarkerIndex" :index="cmIndex" v-on:click="removeColorMat($event, MarkerIndex, cmIndex)" class="btn btn-danger remove-btn">X</button></td>
                                    </tr>
                                </template>
                            </table>
                        </div>
                        <div class="row" v-else>
                            <div class="col-md-4 col-md-offset-4">
                                <button v-on:click="addColorMatLine($event, MarkerIndex)" class="btn-block btn btn-success">Add The Color and Material</button>
                            </div>
                        </div>

                    </div>
                </div>
        </div>
              </template>
        <div class="col-md-2">
            <button v-on:click="addMarker" class="btn btn-success btn-block">Add Marker</button>
        </div>

    </div>
    <div class="row" v-if="finalProduction">
        <div class="col-md-10 col-md-offset-1">
            <div class="form-row">
                <label class="col-md-2 col-form-label" for="date">Date</label>
                <input type="date" readonly class=" col-md-4" name="Date" id="date" v-model="finalProduction.Date" />
            </div>
            <template v-for="cts in finalProduction.CuttingInstructions">
                <div class="row" style="margin:25px; padding:15px; border:1px solid lightgrey;">
                    <h3><label>Marker:</label>{{cts.Marker.MarkerSizeText}}</h3>
                    <p><label>Lot #:</label>{{cts.LotNumber}}</p>
                    <div class="row" v-if="cts.Items.length > 0">
                        <div class="col-md-8 col-md-offset-2">
                            <table class=" table table-bordered table-striped table-responsive">
                                <tr>
                                    <th>Item #</th>
                                    <th>SKU</th>
                                    <th>Quantity</th>
                                </tr>
                                <template v-for="item in cts.Items">
                                    <tr>
                                        <td><input readonly type="text" v-model="item.ItemId" /></td>
                                        <td><input readonly type="text" v-model="item.Item.SKU" /></td>
                                        <td><input readonly type="text" v-model="item.Quantity" /></td>
                                    </tr>
                                </template>
                            </table>
                        </div>
                        
                    </div>
                </div>
            </template>
        </div>
       
    </div>
    <div class="row" style="margin-bottom:50px;" v-if="production">
        <div class="col-md-4 col-md-offset-4" v-if="finalProduction">
            <button v-on:click="submitProduction" class="btn btn-primary btn-block">Submit</button>
        </div>
        <div class="col-md-4 col-md-offset-4" v-else >
            <button v-on:click="saveProdToItems" :disabled="!formVaild" class="btn btn-info btn-block">Save</button>
        </div>
    </div>

</div>
    @section scripts{
        <script src="~/Scripts/vue.js"></script>
        <script src="~/Scripts/SiteScripts/new-production-Vue.js"></script>
        <script src="~/Scripts/SiteScripts/new-production.js"></script>
    }


